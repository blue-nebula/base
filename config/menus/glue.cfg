show_ui = [ showgui $arg1 $arg2 ]
clear_ui = [ cleargui $arg1 ]
new_ui = [ newgui $arg1 $arg2 $arg3 ]


ui_test = [new_ui ui_test [
    ui_stay_open [@@arg1]
    guistatus $guirolloveraction
]; show_ui ui_test]

ui_tip = [ ui_status (format "TIP: ^fa%1" (? (> $numargs 0) [@arg1] (showtip))) ]

ui_spacing = [
    ui_strut (divf $arg1 $fontwidth) 1
    ui_strut (divf $arg2 $fontheight)
]
ui_spacing2 = [
    ui_strut (divf $arg1 $fontwidth)
    ui_strut (divf $arg2 $fontheight) 1
]

ui_list2 = [ ui_list [ ui_list [ arg1 ] ] ]
ui_right = [ ui_list [ ui_spring 1; arg1 ] ]
ui_center = [ ui_list [ ui_spring 1; arg1; ui_spring 1 ] ]
ui_center_z = [ ui_list [ ui_spring 1; ui_list [ arg1 ]; ui_spring 1 ] ]

// spacers
ui_small_spacer = [ ui_strut 0.2 ]
ui_big_spacer = [ ui_strut 0.8 ]

ui_box = [
    ui_list [
        ui_background $arg1 $ui_blend_background $arg2 1 1
        ui_strut 0.8
        ui_list [
            ui_strut 0.2
            arg3
            ui_strut 0.2
        ]
        ui_strut 0.8
    ]
]
ui_box2 = [ui_list [ui_box $arg1 $arg2 $arg3]]

ui_merge = [ ui_no_skin_fx [ui_body [ui_list [ui_list [ui_strut $arg1]; ui_list [arg2]]] $arg3 $arg4 $arg5] ]

ui_loop_list_split = [
    ui_list [
        gli = 0
        gll = (listlen $arg3)
        glz = (div (+ $gll (- $arg2 1)) $arg2)
        loop gla $arg2 [
            ui_list [
                glt = (min (+ $gli $glz) $gll)
                while [< $gli $glt] [
                    $arg1 = (at $arg3 $gli)
                    arg4
                    gli = (+ $gli 1)
                ]
            ]
            if (< (+ $gla 1) $arg2) [arg5]
        ]
    ]
]

ui_loop_split = [
    ui_list [
        gli = 0
        glz = (div (+ $arg3 (- $arg2 1)) $arg2)
        loop gla $arg2 [
            ui_list [
                glt = (min (+ $gli $glz) $arg3)
                while [< $gli $glt] [
                    $arg1 = $gli
                    arg4
                    gli = (+ $gli 1)
                ]
            ]
            if (< (+ $gla 1) $arg2) [arg5]
        ]
    ]
]

ui_loop_scrollbar = [
    if (= 0 $guipasses) [slider = 0]
    slidermax = (max (- $arg2 $arg3) 0)
    ui_list [
        ui_list [
            ui_strut $arg4 1
            loop line (min $arg3 $arg2) [
                $arg1 = (+ $line $slider)
                arg5
            ]
        ]
        if $slidermax [ui_slider slider 0 $slidermax [] 1 1]
    ]
]

ui_checkbox2 = [
    ui_stay_open [ ui_button $arg1 [case $@arg2 0 [@@arg2 1] 1 (? @arg3 [@@arg2 2] [@@arg2 0]) 2 [@@arg2 0]] [] "checkbox" 0xFFFFFF 0xFFFFFF -1 1 (? $$arg2 "checkboxon" "") (? (= $$arg2 2) $ui_color_checkbox_two $ui_color_checkbox) ]
]

ui_radiobutton2 = [
    ui_stay_open [ ui_button $arg1 [@arg2 @arg3] [] "radiobox" 0xFFFFFF 0xFFFFFF -1 1 (? (= $$arg2 $arg3) "radioboxon" "") $ui_color_radiobutton_box ]
]

// ui_button for editing commands with built-in key display, tooltip and r-click for console
ui_edit_button = [
    local cmd // in case there is a semicolon to escape
    cmd = (stringreplace $arg2 ";" "^";^"")
    ui_body [
        ui_button $arg1
        ui_strut 0.5
        ui_spring 1
        ui_button (dobindsearch [@arg2] edit)
    ] [@arg2] [saycommand /@cmd] [ui_tooltip [/@@arg2]]
]
ui_edit_button2 = [ui_list [ui_edit_button [@@arg1] [@@arg2]]]

// same for looking up an editvarbind on a checkbox
ui_edit_checbox = [
    ui_body [
        ui_checkbox $arg1 $arg2
        ui_strut 0.5
        ui_spring 1
        ui_button (dobindsearch [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [ echo @@arg2 ON]] edit)
    ] [if (= $@arg2 0) [echo @@arg2 OFF] [ echo @@arg2 ON]] [saycommand /@arg2] [ui_tooltip [/@@arg2]]
]
ui_edit_checbox2 = [ui_list [ui_edit_checbox [@@arg1] [@@arg2]]]

ui_switch = [ ui_list [ ui_list [ if (arg1) [arg2] [arg3] ] ] ]

ui_one = [
    ui_spring 1
    ui_list [
        ui_spring 1
        ui_list [
            //ui_strut 80 1
            arg1
        ]
        ui_spring 1
    ]
    ui_spring 1
]

ui_two = [
    ui_spring 1
    ui_list [
        ui_list [
            ui_spring 1
            ui_list [
                ui_spring 1
                arg1
                ui_spring 1
            ]
            ui_spring 1
        ]
        ui_strut 2
        ui_list [
            //ui_strut 50 1
            ui_spring 1
            arg2
            ui_spring 1
            arg3
        ]
    ]
    ui_spring 1
]

// arg1 = macro_prefix, arg2 = number of entries shown at once, arg3 = minimum width
// arg4 = default spacing with no entries, arg5 = code test to display the list if this results true
// arg6 = number of entries to be looped through, arg7 = show background (bool), arg8 = code to be executed before every entry
// arg9 = requirement for entry to be shown in list, arg10 = to be shown when there's no entries
// arg11 = info bar above the actual list, arg12 = list entry code, arg13 = info bar beneigh the actual list
ui_big_macro = [ ui_stay_open [
    local entries_shown_at_once
    local minimum_width
    local show_background
    local initialise_macro_vars
    local show_entry_requirement
    local info_popdown_menu
    local top_info_bar
    local list_entry
    local bottom_info_bar

    entries_shown_at_once   = $arg2
    minimum_width           = $arg3
    show_background         = $arg7

    initialise_macro_vars   = arg8
    show_entry_requirement  = arg9
    info_popdown_menu       = arg10
    top_info_bar            = arg11
    list_entry              = arg12
    bottom_info_bar         = arg13

    macro_num   = @[arg1]num
    macro_count = @[arg1]count
    macro_disp  = @[arg1]disp
    macro_list  = @[arg1]list
    macro_index = @[arg1]index
    macro_alts  = @[arg1]alts

    ui_list [
        // show top info bar
        if (> $numargs 10) [@[top_info_bar]]

        // draw list with slider
        ui_list [
            @[macro_count] = $entries_shown_at_once
            @[macro_disp]  = 0
            @[macro_list]  = 0

            ui_list [
                ui_strut (+ $minimum_width 2) 1

                if $show_background [
                    ui_background $ui_color_textfield_background $ui_blend_textfield_background $ui_color_textfield_border $ui_blend_textfield_border
                    ui_strut 0.25
                ]

                if (arg5) [
                    @[macro_num] = $arg6
                    if (> $@[macro_num] 0) [
                        @[macro_index] = (min (max 0 (- $@[macro_num] $@[macro_count])) $@[macro_index])
                        loop i $@[macro_num] [
                            [@[initialise_macro_vars]]

                            if ([@[show_entry_requirement]]) [
                                if (&& (>= $i $@[macro_index]) (< $@[macro_list] $@[macro_count])) [
                                    if (> $numargs 11) [@[list_entry]]
                                    @[macro_list] = (+ $@[macro_list] 1)
                                ]
                                @[macro_disp] = (+ $@[macro_disp] 1)
                            ]
                        ]
                    ] [
                        ui_strut (-f (*f $arg4 $entries_shown_at_once) 1)
                        [@[info_popdown_menu]]
                        @[macro_list] = $entries_shown_at_once
                    ]
                ] [
                    ui_strut (-f (*f $arg4 $entries_shown_at_once) 1)
                    [@[info_popdown_menu]]
                    @[macro_list] = $entries_shown_at_once
                ]

                @[macro_alts] = (- $@[macro_count] $@[macro_list])
                if (> $@[macro_alts] 0) [
                    ui_strut (*f $@[macro_alts] $arg4)

                    if $show_background [
                        ui_strut 0.25
                    ]
                ]
            ]
            ui_slider @[macro_index] 0 (max (- $@[macro_disp] $@[macro_list]) 0) [] 1 1
        ]

        // show bottom info bar
        [@[bottom_info_bar]]
    ]
] ]


savewarncmd = ""
new_ui savewarn [
    ui_font "super" [ ui_center [ ui_text "confirm action" ] ]
    ui_font "default" [ ui_center [ ui_text (format "^"^fs^fa%1^fS^"" $savewarncmd) ] ]
    ui_strut 1
    ui_center [ ui_text "the current map has unsaved changes" ]
    ui_center [ ui_text "would you like to save them now?" ]
    ui_strut 1
    ui_list [
        ui_font "emphasis" [
            ui_spring 1
            ui_button "^fgsave" [savemap; @@savewarncmd]
            ui_spring 1
            ui_button "^fodiscard" [@@savewarncmd]
            ui_spring 1
            ui_button "^frabort" [clear_ui 1]
            ui_spring 1
        ]
    ]
]

savewarnchk = [
    if (&& (isconnected) (= (gamemode) $modeidxediting) $totalundos) [ savewarncmd = $arg1; show_ui savewarn ] [ arg1 ]
]

ui_rgb_sliders = [
    // arg1 is an alias that takes a hex colour value
    colr = (& (>> $$arg1 16) 0xFF)
    colg = (& (>> $$arg1 8) 0xFF)
    colb = (& $$arg1 0xFF)
    loop i 3 [
        n = [col@(at "r g b" $i)]
        ui_list [
            ui_list [
                ui_strut 30 1
                ui_slider $n 0 255 [
                    @arg1 = (+ (<< $colr 0x10) (<< $colg 0x8) $colb)
                ] 0 1 (at [0xFF0000 0x00FF00 0x0000FF] $i) 1 (<< $$n (* (- 2 $i) 8))
            ]
            ui_text (concatword "^f[" (at [0xFF0000 0x00FF00 0x0000FF] $i) "]" (at "R G B" $i))
        ]
    ]
]

ui_hex_preview = [
        ui_list [
            ui_background $arg1 1 0xffffff 1
            ui_strut 0.9
            ui_strut 12 1
            ui_center [ ui_text @arg2 ]
            ui_center [ ui_text (hexcolour @arg1) ]
            ui_strut 0.9
        ]
]

ui_palette = [ // creates 6 * 30 colour preset buttons; arg1: icon size
    ui_stay_open [
        p = 0x0f0f0f // grays
        ui_list [
            loop i 30 [
                ui_image "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                p = (+ $p 0x080808)
            ]
        ]
        p = 0xFFAAAA // pastell
        ui_list [
            looplist j [0x001100 -0x110000 0x000011 -0x001100 0x110000 -0x000011] [
                loop i 5 [
                    ui_image "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
        p = 0xFF5555 // tints
        ui_list [
            looplist j [0x002200 -0x220000 0x000022 -0x002200 0x220000 -0x000022] [
                loop i 5 [
                    ui_image "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
        p = 0xFF0000 // pure hues
        ui_list [
            looplist j [0x003300 -0x330000 0x000033 -0x003300 0x330000 -0x000033] [
                loop i 5 [
                    ui_image "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
        p = 0xAA0000 // shades
        ui_list [
            looplist j [0x002200 -0x220000 0x000022 -0x002200 0x220000 -0x000022] [
                loop i 5 [
                    ui_image "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
        p = 0x550000 // dark shades
        ui_list [
            looplist j [0x001100 -0x110000 0x000011 -0x001100 0x110000 -0x000011] [
                loop i 5 [
                    ui_image "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
    ]
]

new_ui pick_color [ ui_stay_open [
    // scurvar is a command / game variables that takes a hex colour value
    ui_list [
        ui_font emphasis [
            ui_text (format "pick a colour for the variable /%1" $scurvar)
            ui_spring 1
            ui_button "^fyOK" [@scurvar @hex; clear_ui 1]
            ui_strut 3
            ui_button "^fgCancel" [clear_ui 1]
        ]
    ]
    if (= $guipasses 0) [ hex = $$scurvar ]
    ui_strut 1
    ui_list [
        ui_body [ ui_list [
            ui_hex_preview (getvardef $scurvar) "default"
        ] ] [hex = (getvardef $scurvar)]
        ui_spring 1
        ui_body [ ui_list [
            ui_hex_preview $$scurvar "current"
        ] ] [hex = $$scurvar]
        ui_spring 1
        ui_hex_preview $hex "new"
        ui_spring 1
        ui_list [
            ui_rgb_sliders hex
        ]
    ]
    ui_strut 1
    ui_center [ui_text "^faclick a colour preset below and/or use the RGB-sliders to choose a new colour" ]
    ui_strut 1
    ui_palette 0.65
] ]

pick_color = [ scurvar = $arg1 ; hex = $$arg1; show_ui pick_color ]

looplist i [
    ui_test ui_tip ui_spacing ui_spacing2 ui_list2 ui_right ui_center ui_center_z
    ui_box ui_box2 ui_merge ui_loop_list_split ui_loop_split ui_loop_scrollbar
    ui_checkbox2 ui_edit_button ui_edit_button2 ui_edit_checbox ui_edit_checbox2
] [setcomplete $i 1]
